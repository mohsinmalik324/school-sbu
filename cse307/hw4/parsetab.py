
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftGTGTELTLTEEQUALNEQUALleftINleftADDMINUSleftFDIVIDEleftMODleftMULTDIVIDErightPOWrightUMINUSADD AND BOOLEAN COMMA DIVIDE EQUAL FDIVIDE GT GTE IN INT LBRACKET LPAREN LT LTE MINUS MOD MULT NEQUAL NOT OR POW RBRACKET REAL RPAREN STRING\n\tstatement : expression\n\t\n\texpression : number\n\t\t\t   | BOOLEAN\n\t\t\t   | STRING\n\t\t\t   | list\n\t\t\t   | empty\n\t\n\texpression : expression LBRACKET number RBRACKET\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NOT expression\n\t\t\t   | expression AND expression\n\t\t\t   | expression OR expression\n\t\n\texpression : expression GT expression\n\t\t\t   | expression GTE expression\n\t\t\t   | expression LT expression\n\t\t\t   | expression LTE expression\n\t\t\t   | expression EQUAL expression\n\t\t\t   | expression NEQUAL expression\n\t\n\texpression : expression ADD expression\n\t\t\t   | expression MINUS expression\n\t\t\t   | expression MULT expression\n\t\t\t   | expression DIVIDE expression\n\t\t\t   | expression FDIVIDE expression\n\t\t\t   | expression POW expression\n\t\t\t   | expression MOD expression\n\t\t\t   | expression IN expression\n\texpression : MINUS expression %prec UMINUS\n\tlist : LBRACKET RBRACKET\n\t\t | LBRACKET innerlist RBRACKET\n\t\n\tinnerlist : innerlist COMMA expression\n\t\t\t  | expression\n\t\n\tnumber : INT\n\t\t   | REAL\n\t\n\tempty :\n\t'
    
_lr_action_items = {'BOOLEAN':([0,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'STRING':([0,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LPAREN':([0,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NOT':([0,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[11,24,-2,-3,-4,-5,-6,11,11,11,11,-31,-32,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-27,24,24,24,-26,24,24,24,24,24,24,24,24,-18,-19,-20,-21,-22,-23,-24,24,-28,11,-8,-7,24,]),'INT':([0,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'REAL':([0,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[8,14,-2,-3,-4,-5,-6,8,8,8,8,-31,-32,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-27,14,14,-9,-26,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,8,-8,-7,14,]),'AND':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,15,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,15,15,-9,-26,-10,15,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,15,]),'OR':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,16,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,16,16,-9,-26,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,16,]),'GT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,17,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,17,17,17,-26,17,17,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,17,]),'GTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,18,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,18,18,18,-26,18,18,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,18,]),'LT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,19,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,19,19,19,-26,19,19,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,19,]),'LTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,20,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,20,20,20,-26,20,20,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,20,]),'EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,21,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,21,21,21,-26,21,21,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,21,]),'NEQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,22,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,22,22,22,-26,22,22,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,22,]),'ADD':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,23,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,23,23,23,-26,23,23,23,23,23,23,23,23,-18,-19,-20,-21,-22,-23,-24,23,-28,-33,-8,-7,23,]),'MULT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,25,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,25,25,25,-26,25,25,25,25,25,25,25,25,25,25,-20,-21,25,-23,25,25,-28,-33,-8,-7,25,]),'DIVIDE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,26,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,26,26,26,-26,26,26,26,26,26,26,26,26,26,26,-20,-21,26,-23,26,26,-28,-33,-8,-7,26,]),'FDIVIDE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,27,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,27,27,27,-26,27,27,27,27,27,27,27,27,27,27,-20,-21,-22,-23,-24,27,-28,-33,-8,-7,27,]),'POW':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,28,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,28,28,28,-26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-28,-33,-8,-7,28,]),'MOD':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,29,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,29,29,29,-26,29,29,29,29,29,29,29,29,29,29,-20,-21,29,-23,-24,29,-28,-33,-8,-7,29,]),'IN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-33,30,-2,-3,-4,-5,-6,-33,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,30,30,30,-26,30,30,30,30,30,30,30,30,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,30,]),'$end':([0,1,2,3,4,5,6,7,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,],[-33,0,-1,-2,-3,-4,-5,-6,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,-9,-26,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-8,-7,]),'RBRACKET':([3,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-2,-3,-4,-5,-6,31,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,54,-30,-9,-26,57,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,-29,]),'COMMA':([3,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-2,-3,-4,-5,-6,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,55,-30,-9,-26,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-33,-8,-7,-29,]),'RPAREN':([3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,],[-2,-3,-4,-5,-6,-33,-33,-33,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-27,56,-9,-26,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-8,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[2,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,]),'number':([0,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[3,3,3,3,3,37,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'list':([0,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'empty':([0,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'innerlist':([8,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement','stonyBrookScript.py',107),
  ('expression -> number','expression',1,'p_expression','stonyBrookScript.py',117),
  ('expression -> BOOLEAN','expression',1,'p_expression','stonyBrookScript.py',118),
  ('expression -> STRING','expression',1,'p_expression','stonyBrookScript.py',119),
  ('expression -> list','expression',1,'p_expression','stonyBrookScript.py',120),
  ('expression -> empty','expression',1,'p_expression','stonyBrookScript.py',121),
  ('expression -> expression LBRACKET number RBRACKET','expression',4,'p_index','stonyBrookScript.py',127),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_2','stonyBrookScript.py',138),
  ('expression -> NOT expression','expression',2,'p_logic','stonyBrookScript.py',144),
  ('expression -> expression AND expression','expression',3,'p_logic','stonyBrookScript.py',145),
  ('expression -> expression OR expression','expression',3,'p_logic','stonyBrookScript.py',146),
  ('expression -> expression GT expression','expression',3,'p_comparison','stonyBrookScript.py',157),
  ('expression -> expression GTE expression','expression',3,'p_comparison','stonyBrookScript.py',158),
  ('expression -> expression LT expression','expression',3,'p_comparison','stonyBrookScript.py',159),
  ('expression -> expression LTE expression','expression',3,'p_comparison','stonyBrookScript.py',160),
  ('expression -> expression EQUAL expression','expression',3,'p_comparison','stonyBrookScript.py',161),
  ('expression -> expression NEQUAL expression','expression',3,'p_comparison','stonyBrookScript.py',162),
  ('expression -> expression ADD expression','expression',3,'p_ops','stonyBrookScript.py',185),
  ('expression -> expression MINUS expression','expression',3,'p_ops','stonyBrookScript.py',186),
  ('expression -> expression MULT expression','expression',3,'p_ops','stonyBrookScript.py',187),
  ('expression -> expression DIVIDE expression','expression',3,'p_ops','stonyBrookScript.py',188),
  ('expression -> expression FDIVIDE expression','expression',3,'p_ops','stonyBrookScript.py',189),
  ('expression -> expression POW expression','expression',3,'p_ops','stonyBrookScript.py',190),
  ('expression -> expression MOD expression','expression',3,'p_ops','stonyBrookScript.py',191),
  ('expression -> expression IN expression','expression',3,'p_ops','stonyBrookScript.py',192),
  ('expression -> MINUS expression','expression',2,'p_uminus','stonyBrookScript.py',228),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','stonyBrookScript.py',236),
  ('list -> LBRACKET innerlist RBRACKET','list',3,'p_list','stonyBrookScript.py',237),
  ('innerlist -> innerlist COMMA expression','innerlist',3,'p_innerlist','stonyBrookScript.py',246),
  ('innerlist -> expression','innerlist',1,'p_innerlist','stonyBrookScript.py',247),
  ('number -> INT','number',1,'p_number','stonyBrookScript.py',256),
  ('number -> REAL','number',1,'p_number','stonyBrookScript.py',257),
  ('empty -> <empty>','empty',0,'p_empty','stonyBrookScript.py',263),
]
